syntax = "proto3";

package collections;

option go_package = "internal/api/proto;collections";

import "google/protobuf/struct.proto";

// --- Enums ---
enum RequestKind {
  REQUEST_KIND_UNSPECIFIED = 0;
  HTTP = 1;
  GRAPHQL = 2;
}

enum HTTPMethod {
  HTTP_METHOD_UNSPECIFIED = 0;
  GET = 1;
  POST = 2;
  PUT = 3;
  DELETE = 4;
  PATCH = 5;
  OPTIONS = 6;
  HEAD = 7;
}

// --- Inputs ---

message CreateCollectionRequest {
  string name = 1;
  string description = 2;
}

message AddRequestToCollectionRequest {
  string collection_name = 1;
  CollectionRequestInput request = 2;
}

message CollectionRequestInput {
  RequestKind kind = 1;
  string name = 2;
  HTTPRequestInput http = 3;
  GraphQLRequestInput graphql = 4;
}

message HTTPRequestInput {
  HTTPMethod method = 1;
  string url = 2;
  repeated HeaderInput headers = 3;
  repeated QueryParamInput query_params = 4;
  google.protobuf.Struct body = 5;
}

message GraphQLRequestInput {
  string endpoint = 1;
  string query = 2;
  google.protobuf.Struct variables = 3;
  repeated HeaderInput headers = 4;
}

message HeaderInput {
  string key = 1;
  string value = 2;
}

message QueryParamInput {
  string key = 1;
  string value = 2;
}

message ListCollectionsRequest {}

message UpdateCollectionRequest {
  string id = 1;
  string name = 2;
  string description = 3;
}

message UpdateRequestInCollectionRequest {
  string collection_id = 1;
  string request_id = 2;

  string name = 3;
  RequestKind kind = 4;

  string http_method = 5;
  string http_url = 6;
  string http_headers = 7;
  string http_query_params = 8;
  string http_body = 9;

  string graphql_endpoint = 10;
  string graphql_query = 11;
  string graphql_variables = 12;
  string graphql_headers = 13;
}

message DeleteRequestFromCollectionRequest {
  string collection_id = 1;
  string request_id = 2;
}

message DeleteCollectionRequest {
  string id = 1;
}


// --- Outputs ---

message CreateCollectionResponse {
  string id = 1;
  string name = 2;
}

message CollectionResponse {
  string id = 1;
  string name = 2;
  string description = 3;
  int32 request_count = 4;
  repeated CollectionRequest requests = 5;
}

message CollectionRequest {
  oneof request {
    HTTPRequest http_request = 1;
    GraphQLRequest graphql_request = 2;
  }
}

message HTTPRequest {
  string name = 1;
  HTTPMethod method = 2;
  string url = 3;
}

message GraphQLRequest {
  string name = 1;
  string endpoint = 2;
  string query = 3;
}


message ListCollectionsResponse {
  repeated CollectionResponse collections = 1;
}

message UpdateRequestInCollectionResponse {
  string message = 1;
   string request_id = 2;
}

message DeleteResponse {
  bool success = 1;
  string message = 2;
}


// --- Service ---

service CollectionService {
  rpc CreateCollection (CreateCollectionRequest) returns (CreateCollectionResponse);
  rpc AddRequestToCollection (AddRequestToCollectionRequest) returns (CollectionResponse);
  rpc ListCollectionsAndRequests(ListCollectionsRequest)returns(ListCollectionsResponse);
  rpc UpdateCollection(UpdateCollectionRequest) returns (CollectionResponse);
  rpc UpdateRequestInCollection(UpdateRequestInCollectionRequest) returns (UpdateRequestInCollectionResponse);
  rpc DeleteRequestFromCollection(DeleteRequestFromCollectionRequest) returns (DeleteResponse);
  rpc DeleteCollection(DeleteCollectionRequest) returns (DeleteResponse);
}



